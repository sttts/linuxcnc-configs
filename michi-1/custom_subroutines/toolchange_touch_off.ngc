o<toolchange_touch_off> sub

( Filename: tool_change_touch_off.ngc )
( From: https://forum.linuxcnc.org/10-advanced-configuration/5596-manual-tool-change-tool-lengh-touch-off?start=30#48235)
( LinuxCNC Manual Tool-Change Subroutines for Milling Machines version 1.1: subroutine 1/2 )
(  BEFORE USING CHANGE "CONFIGURATION PARAMETERS" BELOW FOR YOUR MACHINE! )
(  )
( In the LinuxCNC .ini config file, under the [RS274NGC] section add: )
(    # change/add/use SUBROUTINE_PATH to point to the location where these tool-change subroutines are located: )
(    SUBROUTINE_PATH = /home/linuxcnc/linuxcnc/nc_files )
(    REMAP=M6    modalgroup=6 ngc=tool-change )
(    REMAP=M600  modalgroup=6 ngc=tool-job-begin )
( and under the [EMCIO] section add: )
(    TOOL_CHANGE_AT_G30 = 0 )
( and ensure neither TOOL_CHANGE_POSITION nor TOOL_CHANGE_QUILL_UP is set. )
(  )
( In the LinuxCNC .hal config file, map some input pin to be the probe input, e.g.: )
(    net probe-z parport.0.pin-12-in => motion.probe-input )
(  )
( Usage: M6 in the g-code will invoke a manual tool change with automatic tool height adjustment. )
(        M600 is used at the beginning of the first g-code file of a job so that the next M6 will measure the tool for reference )
(             instead of caluculating a tool length offset. It can also be invoked manually through the MDI before a job starts. )
(  )
( General theory of operation: touches each tool off to the tool height sensor. The first tool is used as the reference, all )
(     subsequent tools adjust the tool offset. The tip of the tool is always placed back at the poxsition it started in before )
(     any of the subroutines are called. It is moved away by raising Z to _TravelZ before moving towards the switch, and when )
(     moving back from the switch again moves at height _TravelZ before going straight back down to the original position. Set )
(     all necessary modes to ensure correct operation no matter what state the program is in when this is called. We eliminate )
(     almost all side effects by saving and restoring the modal state. )
(  )
( Side effects: sets G30, sets motion mode to G1. )

O010 IF [ #<_task> EQ 0 ]
  M6
  O020 RETURN
O010 ENDIF

(------------------------------- CONFIGURATION PARAMETERS ----------------------------------------------)
#<_UseInches> =           0     ( set to 1 to use inches here, or 0 to use millimeters; should match units on tool.tbl dimensions )
#<_TravelZ> =             0     ( machine Z coordinate for travelling, typically near max Z to avoid ever hitting the work )
#<_TravelFeed> =     2000.0     ( feedrate used for general Z moves when avoiding G0 )
#<_ProbeX> =          -361.4 (#5181)     ( machine X coordinate of switch/touch-off plate )
#<_ProbeY> =          -8.4   (#5182)     ( machine Y coordinate of switch/touch-off plate )
#<_ProbeFastZ> =      -29.0  (#5183)     ( machine Z coord to move to before starting probe, longest tool should not touch switch at this Z )
#<_ProbeMinZ> = [#<_ProbeFastZ> - 140.0]  ( machine Z coord to stop probe, shortest tool must touch switch at this Z, must be > min Z )
#<_ProbeRetract> =      1.0     ( small distance to retract before approaching switch/touch-off plate second time )
#<_ProbeFastFeed> =  1000.0     ( feed rate for moving to _ProbeFastZ )
#<_ProbeSlowReturnFeed> =  300.0 ( feed rate for moving back to oldZ )
#<_ProbeFeed1> =      500.0     ( feed rate for touching switch/touch-off plate first time )
#<_ProbeFeed2> =       10.0     ( feed rate for touching switch/touch-off plate second time )
#<_MistOnDuringProbe> =   0     ( set to 1 for mist, or 2 for coolant, or 0 for nothing during probing, to clear switch of swarf )
#<_spindle_zero_height> = 172   ( G53 distance from home to spindle nose triggering point on touch plate)
#<_oldTool> = #5400
#<_oldTLO> = #5403
(-------------------------------------------------------------------------------------------------------)

#<_oldWorkZ> = #<_z>                           ( store Z for possible error message to move back manually )

O100 IF [ EXISTS[#<_ToolDidFirst>] EQ 0 ]
  #<_ToolDidFirst> = 0
O100 ENDIF
O110 IF [ #<_ToolDidFirst> EQ 0 ]
  G49                                          ( clear tool length compensation prior to saving state if this is first time )
O110 ENDIF

M70                                            ( save current modal state )

M9                                             ( turn off coolant, will be restored on return if it was on )
M5                                             ( turn off spindle, cannot be on during the probe )
G[21 - #<_UseInches>]                          ( use inches or millimeters as required here, units will be restored on return )

#<_G30_oldX> = #5181                           ( backup G30 position )
#<_G30_oldY> = #5182
#<_G30_oldZ> = #5183
G30.1                                          ( save current position in #5181-#5183... )
#<_oldX> = #5181                               ( remember position )
#<_oldY> = #5182
#<_oldZ> = #5183
#5181 = #<_G30_oldX>                           ( restore G30 position )
#5182 = #<_G30_oldY>
#5183 = #<_G30_oldZ>

G59.3
G49                                            ( clear tool length compensation )
G90                                            ( use absolute positioning here )
G94                                            ( use feedrate in units/min )
G40                                            ( turn cutter radius compensation off here )
G92.1                                          ( cancel G92 offset )

M6                                           ( do the normal M6 stuff, including going to tool change position )
G49                                          ( clear tool length compensation )

G53 G1 F[#<_TravelFeed>] Z[#<_TravelZ>]      ( go to high travel level on Z )
G53 G0 X[#<_ProbeX>] Y[#<_ProbeY>]           ( to probe switch )
G53 G1 F[#<_ProbeFastFeed>] Z[#<_ProbeFastZ>]( move tool closer to switch -- we shouldn't hit it )

O120 IF [ #<_MistOnDuringProbe> EQ 1 OR #<_MistOnDuringProbe> EQ 2 ]
  M[7 + #<_MistOnDuringProbe> - 1]           ( turn on mist/coolant )
O120 ENDIF

G91                                          ( use relative positioning )
G38.2 Z[#<_ProbeMinZ> - #<_ProbeFastZ>] F[#<_ProbeFeed1>] ( trip switch slowly )
G0 Z[#<_ProbeRetract>] F[#<_ProbeFeed1>]     ( go up slightly )

G38.2 Z[#<_ProbeRetract>*-1.25] F[#<_ProbeFeed2>]   ( trip switch very slowly )

M9                                           ( turn off mist )
G90                                          ( use absolute positioning )

O200 if [#5070 EQ 1]                         ( verify probe event was succesful )
  #<_ToolZ> = [#5063 + #5383 + #<_spindle_zero_height>]                ( save trip point, absolute mchine coordinates )
O200 else
  M72
  (MSG, Tool Length Offset Probe Failed. Old Z: #<_oldWorkZ>)
  G53 G1 F[#<_TravelFeed>] Z[#<_TravelZ>]    ( return to safe level )
  G53 G0 X[#<_oldX>] Y[#<_oldY>]             ( return to where we were in X Y)
  M0
  O130 RETURN
O200 endif

M72                                          ( restore current modal state )

O210 IF [ #<_ToolDidFirst> EQ 0 ]            ( first tool change? )
  O215 IF [ #<_oldTool> EQ #5400 ]           ( same tool? )
    #<_ToolZLast> = #<_ToolZ>                ( move to same machine Z as before )
    #<_diffZ> = [- #<_oldTLO> + #<_ToolZ>]   ( compensate new TLO to keep Z constant )
    O217 IF [#5220 EQ 1]
      #5223 = [#5223 + #<_diffZ>]            ( G54 )
    O217 ELSE IF [#5220 EQ 2]
      #5243 = [#5243 + #<_diffZ>]            ( G55 )
    O217 ELSE IF [#5220 EQ 3]
      #5263 = [#5263 + #<_diffZ>]            ( G56 )
    O217 ELSE IF [#5220 EQ 4]
      #5283 = [#5283 + #<_diffZ>]            ( G57 )
    O217 ELSE IF [#5220 EQ 5]
      #5303 = [#5303 + #<_diffZ>]            ( G58 )
    O217 ELSE IF [#5220 EQ 6]
      #5323 = [#5323 + #<_diffZ>]            ( G59 )
    O217 ELSE IF [#5220 EQ 7]
      #5343 = [#5343 + #<_diffZ>]            ( G59.1 )
    O217 ELSE IF [#5220 EQ 8]
      #5363 = [#5363 + #<_diffZ>]            ( G59.2 )
    O217 ELSE
      #5383 = [#5383 + #<_diffZ>]            ( G59.3 )
    O217 ENDIF
  O215 ELSE IF [ #<_oldTool> EQ 0 ]          ( before empty spindle? )
    #<_ToolZLast> = #<_ToolZ>                ( don't move Z )
  O215 ELSE                                  ( real tool change )
    #<_ToolZLast> = #<_oldTLO>               ( trust TLO )
  O215 ENDIF
O210 ENDIF

G10 L1 P #5400 Z[#<_ToolZ>]                  ( 5400 = tool number )
T #5400 G43  H #5400                         ( enable tool length offset )

G53 G1 F[#<_TravelFeed>] Z[#<_TravelZ>]      ( return to safe level )
G53 G0 X[#<_oldX>] Y[#<_oldY>]               ( return to where we were in X Y)

#<_newZ> = [#<_oldZ> - #<_ToolZLast> + #<_ToolZ>]

O220 IF [ #<_newZ> GE #<_TravelZ> ]
O220 ELSE
  O225 IF [ #<_newZ> EQ #<_oldZ> ]
    (DEBUG,Fahre auf gleiche HÃ¶he wie vorher)
  O225 ELSE IF [ #<_newZ> GT #<_oldZ> ]
    #<_diffZ> = [#<_newZ>-#<_oldZ>]
    (DEBUG,Fahre #<_diffZ>mm WENIGER runter als vorher)
  O225 ELSE
    #<_diffZ> = [-#<_newZ>+#<_oldZ>]
    (DEBUG,Fahre #<_diffZ>mm WEITER runter als vorher)
  O225 ENDIF
  M0                                         ( pause )
  G53 G1 F[#<_ProbeSlowReturnFeed>] Z[#<_newZ>] ( return to where we were in Z, ajusting for tool length change )
O220 ENDIF

#<_ToolDidFirst> = 1                         ( we have been in this section to set reference value already )
#<_ToolZLast> = #<_ToolZ>                    ( save last tool length )

o<toolchange_touch_off> endsub
M2
