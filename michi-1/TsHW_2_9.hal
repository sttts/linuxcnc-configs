###################################################################
# TsHW Talla simple Hand Wheel  LinuxCNC Version 2.9
###################################################################
# ilowpass und and2
#
# Wenn diese schon in einer anderen HAL geladen bzw. verwendet werden,
# dann muss dies in der Struktur beachtet werden.
# Denn doppeltes laden von Komponenten ist nicht möglich.
# Es müssen die loadrt Befehle auskommentiert werden und
# die loadrt Befehle in den anderen HAL Dateien mit diesen Namen
# ergänzt werden.
# addf kann hier bleiben :-)
#
# Damit der Zero der Achsen geht müssen in der INI die MDI Commands
# angelegt werden
#
#	[HALUI]
#	MDI_COMMAND = G10 L20 P1 X0
#	MDI_COMMAND = G10 L20 P1 Y0
#	MDI_COMMAND = G10 L20 P1 Z0
#
#
#
# Mit setp shw.enc-smooth.gain  kann die Beschleunigung eingestellt werden.
# und mit setp shw.enc-smooth.scale die Übersetzung
#
###################################################################

####################
##      TsHW      ##
####################

loadrt ilowpass names=shw.enc-smooth
addf shw.enc-smooth servo-thread

setp shw.enc-smooth.scale 1
setp shw.enc-smooth.gain  0.025

setp axis.x.jog-vel-mode 1
setp axis.y.jog-vel-mode 1
setp axis.z.jog-vel-mode 1

loadrt and2 names=shw.ena-x,shw.ena-y,shw.ena-z,shw.zero-x,shw.zero-y,shw.zero-z,key-run,key-resume,key-stop,key-pause,key-zero-all,key-zero-single

addf shw.ena-x servo-thread
addf shw.ena-y servo-thread
addf shw.ena-z servo-thread

addf shw.zero-x servo-thread
addf shw.zero-y servo-thread
addf shw.zero-z servo-thread

# step-choice
loadrt mux8 names=shw.step-choice
addf shw.step-choice servo-thread

net key-0001  => shw.step-choice.sel0
net key-001   => shw.step-choice.sel1
net key-01    => shw.step-choice.sel2

setp shw.step-choice.in1 0.001
setp shw.step-choice.in2 0.02
setp shw.step-choice.in4 0.5

net step-choice <= shw.step-choice.out
net step-choice => axis.x.jog-scale
net step-choice => axis.y.jog-scale
net step-choice => axis.z.jog-scale

# key-01 - on when either no scale is selected or 0.5
loadrt lut5 names=shw.led-02,shw.led-07,led-green
addf shw.led-02 servo-thread
net key-01 =>  shw.led-02.in-0
net key-001 =>  shw.led-02.in-1
net key-0001 =>  shw.led-02.in-2
setp shw.led-02.function 3
setp shw.step-choice.in0 0.5 # sttts: override initial jog mode
net key-09-led shw.led-02.out => hm2_7i76e.0.TsHW.0.1.led-02
net key-01 <= hm2_7i76e.0.TsHW.0.1.key-02

# key-001
net key-001 <= hm2_7i76e.0.TsHW.0.1.key-05
net key-001 => hm2_7i76e.0.TsHW.0.1.led-05

# key-0001
net key-0001 <= hm2_7i76e.0.TsHW.0.1.key-08
net key-0001 => hm2_7i76e.0.TsHW.0.1.led-08

# key-x - on when either no axis is selected or x
addf shw.led-07 servo-thread
net key-x-raw =>  shw.led-07.in-0
net key-y =>  shw.led-07.in-1
net key-z =>  shw.led-07.in-2
setp shw.led-07.function 3
net key-x shw.led-07.out => hm2_7i76e.0.TsHW.0.1.led-07
net key-x => shw.ena-x.in0
net key-x-raw <= hm2_7i76e.0.TsHW.0.1.key-07
# sttts: disabled: net key-x => hm2_7i76e.0.TsHW.0.1.led-07
# sttts: disabled: net key-x => shw.ena-x.in0
net ena-x shw.ena-x.out => axis.x.jog-enable

# key-y
net key-y <= hm2_7i76e.0.TsHW.0.1.key-06
net key-y => hm2_7i76e.0.TsHW.0.1.led-06
net key-y => shw.ena-y.in0
net ena-y shw.ena-y.out => axis.y.jog-enable

# key-z
net key-z <= hm2_7i76e.0.TsHW.0.1.key-01
net key-z => hm2_7i76e.0.TsHW.0.1.led-01
net key-z => shw.ena-z.in0
net ena-z shw.ena-z.out => axis.z.jog-enable

# key-ena
net key-ena <= hm2_7i76e.0.TsHW.0.1.key-00
net key-ena-not <= hm2_7i76e.0.TsHW.0.1.key-00-not
net key-ena => shw.ena-x.in1
net key-ena => shw.ena-y.in1
net key-ena => shw.ena-z.in1
net key-ena => halui.mode.manual
# net key-ena => axisui.notifications-clear
net key-ena => hm2_7i76e.0.TsHW.0.1.led-00

# encoder
net enc-00 shw.enc-smooth.in <= hm2_7i76e.0.TsHW.0.1.encoder-0.count
net enc-01 <= shw.enc-smooth.out
net enc-01 => axis.x.jog-counts
net enc-01 => axis.y.jog-counts
net enc-01 => axis.z.jog-counts

# key-zero-single
net key-04 <= hm2_7i76e.0.TsHW.0.1.key-04
net key-04 => hm2_7i76e.0.TsHW.0.1.led-04

addf key-zero-single servo-thread
net key-04 => key-zero-single.in0
net key-ena-not => key-zero-single.in1
net key-zero-single-out key-zero-single.out => shw.zero-x.in1 shw.zero-y.in1 shw.zero-z.in1

net key-z => shw.zero-z.in0
net key-x => shw.zero-x.in0
net key-y => shw.zero-y.in0

net zero-x shw.zero-x.out => halui.mdi-command-00
net zero-y shw.zero-y.out => halui.mdi-command-01
net zero-z shw.zero-z.out => halui.mdi-command-02

# key-zero-all
addf key-zero-all servo-thread
net key-04 => key-zero-all.in0
net key-ena => key-zero-all.in1
net key-zero-all-out key-zero-all.out => halui.mdi-command-03

# key-pause
net key-red <= hm2_7i76e.0.TsHW.0.1.key-03
addf key-pause servo-thread
net key-red => key-pause.in0
net key-ena-not => key-pause.in1
net key-pause-out key-pause.out => halui.program.pause

# key-stop
addf key-stop servo-thread
net key-red => key-stop.in0
net key-ena => key-stop.in1
net key-stop-out key-stop.out => halui.program.stop

# led-red
net led-red <= halui.program.is-running
net led-red => hm2_7i76e.0.TsHW.0.1.led-03

# led-green
addf led-green servo-thread
net is-idle <= halui.program.is-idle
net is-paused <= halui.program.is-paused
net is-idle => led-green.in-0
net is-paused => led-green.in-1
net key-ena => led-green.in-2
setp led-green.function  172
net led-green-out led-green.out
net led-green-out => hm2_7i76e.0.TsHW.0.1.led-09

# key-resume
net key-green <= hm2_7i76e.0.TsHW.0.1.key-09
addf key-resume servo-thread
net key-ena-not => key-resume.in0
net key-green => key-resume.in1
net key-resume-out key-resume.out => halui.program.resume

# key-run
addf key-run servo-thread
net key-ena key-run.in0
net key-green => key-run.in1
net key-run key-run.out => halui.program.run halui.mode.auto
