###################################################################
# TsHW Talla simple Hand Wheel  LinuxCNC Version 2.9
###################################################################
# ilowpass und and2
#
# Wenn diese schon in einer anderen HAL geladen bzw. verwendet werden,
# dann muss dies in der Struktur beachtet werden.
# Denn doppeltes laden von Komponenten ist nicht möglich.
# Es müssen die loadrt Befehle auskommentiert werden und
# die loadrt Befehle in den anderen HAL Dateien mit diesen Namen
# ergänzt werden.
# addf kann hier bleiben :-)
#
# Damit der Zero der Achsen geht müssen in der INI die MDI Commands
# angelegt werden
#
#	[HALUI]
#	MDI_COMMAND = G10 L20 P1 X0
#	MDI_COMMAND = G10 L20 P1 Y0
#	MDI_COMMAND = G10 L20 P1 Z0
#
#
#
# Mit setp shw.enc-smooth.gain  kann die Beschleunigung eingestellt werden.
# und mit setp shw.enc-smooth.scale die Übersetzung
#
###################################################################

####################
##      TsHW      ##
####################

loadrt ilowpass names=shw.enc-smooth
addf shw.enc-smooth servo-thread

setp shw.enc-smooth.scale 1
setp shw.enc-smooth.gain  0.025

setp axis.x.jog-vel-mode 1
setp axis.y.jog-vel-mode 1
setp axis.z.jog-vel-mode 1

loadrt and2 names=shw.ena-x,shw.ena-y,shw.ena-z,shw.zero-x,shw.zero-y,shw.zero-z,key-run,key-resume,key-stop,key-pause,key-zero-all,key-zero-single,led-x,led-z,key-x-plus,key-x-minus,key-y-plus,key-y-minus

addf shw.ena-x servo-thread
addf shw.ena-y servo-thread
addf shw.ena-z servo-thread

addf shw.zero-x servo-thread
addf shw.zero-y servo-thread
addf shw.zero-z servo-thread

# step-choice
loadrt mux8 names=shw.step-choice
addf shw.step-choice servo-thread

net key-0001  => shw.step-choice.sel0
net key-001   => shw.step-choice.sel1
net key-01    => shw.step-choice.sel2

setp shw.step-choice.in1 0.001
setp shw.step-choice.in2 0.02
setp shw.step-choice.in4 0.5

net step-choice <= shw.step-choice.out
net step-choice => axis.x.jog-scale
net step-choice => axis.y.jog-scale
net step-choice => axis.z.jog-scale

# key-01 - on when either no scale is selected or 0.5
loadrt lut5 names=shw.led-02,shw.led-07,led-green,key-x-toggle-in,key-y-toggle-in,key-z-toggle-in,key-01-toggle-in,key-001-toggle-in,key-0001-toggle-in

net key-01-raw <= hm2_7i76e.0.TsHW.0.1.key-02

addf key-01-toggle-in servo-thread
# 010**: f00
# 00110, 00101, 00111: e0
setp key-01-toggle-in.function 0xfe0 
net key-ena => key-01-toggle-in.in-4
net key-01-raw => key-01-toggle-in.in-3
net key-01-toggle-out => key-01-toggle-in.in-2
net key-001-raw => key-01-toggle-in.in-1
net key-0001-raw => key-01-toggle-in.in-0

loadrt toggle names=key-x-toggle,key-y-toggle,key-z-toggle,key-01-toggle,key-001-toggle,key-0001-toggle
addf key-01-toggle servo-thread
net key-01-toggle-in-out key-01-toggle-in.out => key-01-toggle.in
net key-01-toggle-out <= key-01-toggle.out

addf shw.led-02 servo-thread
setp shw.led-02.function 3
net key-01-toggle-out =>  shw.led-02.in-0
net key-001 =>  shw.led-02.in-1
net key-0001 =>  shw.led-02.in-2
net key-01 <= shw.led-02.out

addf led-01 servo-thread
net key-01 => led-01.in0
net key-ena => led-01.in1
net led-01-out led-01.out => hm2_7i76e.0.TsHW.0.1.led-02

setp shw.step-choice.in0 0.5 # sttts: override initial jog mode

# key-001
net key-001-raw <= hm2_7i76e.0.TsHW.0.1.key-05

addf key-001-toggle-in servo-thread
# 010**: f00
# 00110, 00101, 00111: e0
setp key-001-toggle-in.function 0xfe0 
net key-ena => key-001-toggle-in.in-4
net key-001-raw => key-001-toggle-in.in-3
net key-001 => key-001-toggle-in.in-2
net key-01-raw => key-001-toggle-in.in-1
net key-0001-raw => key-001-toggle-in.in-0

addf key-001-toggle servo-thread
net key-001-toggle-in-out key-001-toggle-in.out => key-001-toggle.in
net key-001 <= key-001-toggle.out

addf led-001 servo-thread
net key-001 => led-001.in0
net key-ena => led-001.in1
net led-001-out led-001.out => hm2_7i76e.0.TsHW.0.1.led-05

# key-0001
net key-0001-raw <= hm2_7i76e.0.TsHW.0.1.key-08

addf key-0001-toggle-in servo-thread
# 010**: f00
# 00110, 00101, 00111: e0
setp key-0001-toggle-in.function 0xfe0 
net key-ena => key-0001-toggle-in.in-4
net key-0001-raw => key-0001-toggle-in.in-3
net key-0001 => key-0001-toggle-in.in-2
net key-01-raw => key-0001-toggle-in.in-1
net key-001-raw => key-0001-toggle-in.in-0

addf key-0001-toggle servo-thread
net key-0001-toggle-in-out key-0001-toggle-in.out => key-0001-toggle.in
net key-0001 <= key-0001-toggle.out

addf led-0001 servo-thread
net key-0001 => led-0001.in0
net key-ena => led-0001.in1
net led-0001-out led-0001.out => hm2_7i76e.0.TsHW.0.1.led-08

# key-x - on when either no axis is selected or x
net key-x-raw <= hm2_7i76e.0.TsHW.0.1.key-07

addf key-x-toggle-in servo-thread
# 010**: f00
# 00110, 00101, 00111: e0
setp key-x-toggle-in.function 0xfe0 
net key-ena => key-x-toggle-in.in-4
net key-x-raw => key-x-toggle-in.in-3
net key-x-toggle-out => key-x-toggle-in.in-2
net key-y-raw => key-x-toggle-in.in-1
net key-z-raw => key-x-toggle-in.in-0

addf key-x-toggle servo-thread
net key-x-toggle-in-out key-x-toggle-in.out => key-x-toggle.in
net key-x-toggle-out <= key-x-toggle.out

addf shw.led-07 servo-thread
setp shw.led-07.function 3
net key-x-toggle-out =>  shw.led-07.in-0
net key-y =>  shw.led-07.in-1
net key-z =>  shw.led-07.in-2
net key-x <= shw.led-07.out

net key-x => shw.ena-x.in0
net ena-x shw.ena-x.out => axis.x.jog-enable

addf led-x servo-thread
net key-x => led-x.in0
net key-ena-not => led-x.in1
net led-x-out led-x.out => hm2_7i76e.0.TsHW.0.1.led-07

# key-y
net key-y-raw <= hm2_7i76e.0.TsHW.0.1.key-06

addf key-y-toggle-in servo-thread
# 010**: f00
# 00110, 00101, 00111: e0
setp key-y-toggle-in.function 0xfe0 
net key-ena => key-y-toggle-in.in-4
net key-y-raw => key-y-toggle-in.in-3
net key-y => key-y-toggle-in.in-2
net key-x-raw => key-y-toggle-in.in-1
net key-z-raw => key-y-toggle-in.in-0

addf key-y-toggle servo-thread
net key-y-toggle-in-out key-y-toggle-in.out => key-y-toggle.in
net key-y <= key-y-toggle.out

net key-y => shw.ena-y.in0
net ena-y shw.ena-y.out => axis.y.jog-enable

addf led-y servo-thread
net key-y => led-y.in0
net key-ena => led-y.in1
net led-y-out led-y.out => hm2_7i76e.0.TsHW.0.1.led-06

# key-z
net key-z-raw <= hm2_7i76e.0.TsHW.0.1.key-01

addf key-z-toggle-in servo-thread
# 010**: f00
# 00110, 00101, 00111: e0
setp key-z-toggle-in.function 0xfe0 
net key-ena => key-z-toggle-in.in-4
net key-z-raw => key-z-toggle-in.in-3
net key-z => key-z-toggle-in.in-2
net key-x-raw => key-z-toggle-in.in-1
net key-y-raw => key-z-toggle-in.in-0

addf key-z-toggle servo-thread
net key-z-toggle-in-out key-z-toggle-in.out => key-z-toggle.in
net key-z <= key-z-toggle.out

net key-z => shw.ena-z.in0
net ena-z shw.ena-z.out => axis.z.jog-enable

addf led-z servo-thread
net key-z => led-z.in0
net key-ena-not => led-z.in1
net led-z-out led-z.out => hm2_7i76e.0.TsHW.0.1.led-01

# key-ena
net key-ena <= hm2_7i76e.0.TsHW.0.1.key-00
net key-ena-not <= hm2_7i76e.0.TsHW.0.1.key-00-not
net key-ena => shw.ena-x.in1
net key-ena => shw.ena-y.in1
net key-ena => shw.ena-z.in1
net key-ena => halui.mode.manual
# net key-ena => axisui.notifications-clear
net key-ena => hm2_7i76e.0.TsHW.0.1.led-00

# encoder
net enc-00 shw.enc-smooth.in <= hm2_7i76e.0.TsHW.0.1.encoder-0.count
net enc-01 <= shw.enc-smooth.out
net enc-01 => axis.x.jog-counts
net enc-01 => axis.y.jog-counts
net enc-01 => axis.z.jog-counts

# key-zero-single
net key-04 <= hm2_7i76e.0.TsHW.0.1.key-04
net key-04 => hm2_7i76e.0.TsHW.0.1.led-04

addf key-zero-single servo-thread
net key-04 => key-zero-single.in0
net key-ena-not => key-zero-single.in1
net key-zero-single-out key-zero-single.out => shw.zero-x.in1 shw.zero-y.in1 shw.zero-z.in1

net key-z => shw.zero-z.in0
net key-x => shw.zero-x.in0
net key-y => shw.zero-y.in0

net zero-x shw.zero-x.out => halui.mdi-command-00
net zero-y shw.zero-y.out => halui.mdi-command-01
net zero-z shw.zero-z.out => halui.mdi-command-02

# key-zero-all
addf key-zero-all servo-thread
net key-04 => key-zero-all.in0
net key-ena => key-zero-all.in1
net key-zero-all-out key-zero-all.out => halui.mdi-command-03

# key-pause
net key-red <= hm2_7i76e.0.TsHW.0.1.key-03
addf key-pause servo-thread
net key-red => key-pause.in0
net key-ena-not => key-pause.in1
net key-pause <= key-pause.out 

# key-stop
addf key-stop servo-thread
net key-red => key-stop.in0
net key-ena => key-stop.in1
net key-stop-out key-stop.out => halui.program.stop

# led-red
net led-red <= halui.program.is-running
net led-red => hm2_7i76e.0.TsHW.0.1.led-03

# led-green
addf led-green servo-thread
net is-idle <= halui.program.is-idle
net is-paused <= halui.program.is-paused
net is-idle => led-green.in-0
net is-paused => led-green.in-1
net key-ena => led-green.in-2
setp led-green.function  172
net led-green-out led-green.out
net led-green-out => hm2_7i76e.0.TsHW.0.1.led-09

# key-resume
net key-green <= hm2_7i76e.0.TsHW.0.1.key-09
addf key-resume servo-thread
net key-ena-not => key-resume.in0
net key-green => key-resume.in1
net key-resume <= key-resume.out

# key-run
addf key-run servo-thread
net key-ena key-run.in0
net key-green => key-run.in1
net key-run key-run.out => halui.program.run halui.mode.auto

# key-x-plus
addf key-x-plus servo-thread
net key-0001-raw => key-x-plus.in0
net key-ena => key-x-plus.in1
#net key-x-plus-out key-x-plus.out => halui.jog.0.plus

# key-x-minus
addf key-x-minus servo-thread
net key-01-raw => key-x-minus.in0
net key-ena => key-x-minus.in1
#net key-x-minus-out key-x-minus.out => halui.jog.0.minus

# key-y-plus
addf key-y-plus servo-thread
net key-001-raw => key-y-plus.in0
net key-ena => key-y-plus.in1
#net key-y-plus-out key-y-plus.out => halui.jog.1.plus

# key-y-minus
addf key-y-minus servo-thread
net key-y-raw => key-y-minus.in0
net key-ena => key-y-minus.in1
#net key-y-minus-out key-y-minus.out => halui.jog.1.minus
